[{"content":"Bienvenue sur mon blog Hugo ! Hugo est un générateur de site statique open-source écrit en Go. Il est rapide, facile à utiliser et très flexible. Dans cet article, je vais vous montrer comment j\u0026rsquo;ai créé ce blog avec Hugo.\nImage de google Installation de Hugo La première étape consiste à installer Hugo sur votre ordinateur. Vous pouvez télécharger la dernière version de Hugo sur le site officiel. Une fois que vous avez téléchargé Hugo, vous pouvez vérifier que l\u0026rsquo;installation s\u0026rsquo;est bien déroulée en exécutant la commande suivante dans votre terminal :\nhugo version Création d\u0026rsquo;un nouveau site Hugo Une fois que vous avez installé Hugo, vous pouvez créer un nouveau site Hugo en exécutant la commande suivante dans votre terminal :\nhugo new site my-blog Cette commande crée un nouveau site Hugo dans le dossier my-blog. Vous pouvez maintenant vous rendre dans le dossier my-blog et initialiser un dépôt Git :\ncd my-blog git init Ajout d\u0026rsquo;un thème Hugo Une fois que vous avez créé un nouveau site Hugo, vous pouvez ajouter un thème Hugo en exécutant la commande suivante dans votre terminal :\ngit submodule add Création d\u0026rsquo;un nouveau contenu Une fois que vous avez ajouté un thème Hugo, vous pouvez créer un nouveau contenu en exécutant la commande suivante dans votre terminal :\nhugo new posts/my-first-post.md Cette commande crée un nouveau contenu dans le dossier content/posts avec le nom my-first-post.md. Vous pouvez maintenant éditer le fichier my-first-post.md et ajouter du contenu à votre nouveau contenu.\nGénération du site Hugo Une fois que vous avez créé un nouveau contenu, vous pouvez générer votre site Hugo en exécutant la commande suivante dans votre terminal :\nhugo Cette commande génère votre site Hugo dans le dossier public. Vous pouvez maintenant vous rendre dans le dossier public et initialiser un dépôt Git :\ncd public git init Déploiement du site Hugo Une fois que vous avez généré votre site Hugo, vous pouvez le déployer en exécutant la commande suivante dans votre terminal :\ngit add . git commit -m \u0026#34;Initial commit\u0026#34; git push origin master Cette commande déploie votre site Hugo sur GitHub Pages. Vous pouvez maintenant visiter votre site Hugo à l\u0026rsquo;adresse suivante : https://your-username.github.io/my-blog/.\nConclusion Dans cet article, j\u0026rsquo;ai montré comment j\u0026rsquo;ai créé ce blog avec Hugo. J\u0026rsquo;espère que vous avez trouvé cet article utile et que vous avez appris quelque chose de nouveau. Si vous avez des questions ou des commentaires, n\u0026rsquo;hésitez pas à les laisser dans la section commentaires ci-dessous.\n","permalink":"https://adr1811.github.io/Hugo-Cours/posts/helloworld-copy-2/","summary":"Bienvenue sur mon blog Hugo ! Hugo est un générateur de site statique open-source écrit en Go. Il est rapide, facile à utiliser et très flexible. Dans cet article, je vais vous montrer comment j\u0026rsquo;ai créé ce blog avec Hugo.\nImage de google Installation de Hugo La première étape consiste à installer Hugo sur votre ordinateur. Vous pouvez télécharger la dernière version de Hugo sur le site officiel. Une fois que vous avez téléchargé Hugo, vous pouvez vérifier que l\u0026rsquo;installation s\u0026rsquo;est bien déroulée en exécutant la commande suivante dans votre terminal :","title":"COMMENT INSTALLER HUGO LA TROISIEME VA VOUS CHOQUER"},{"content":"Bienvenue sur mon blog Hugo ! Hugo est un générateur de site statique open-source écrit en Go. Il est rapide, facile à utiliser et très flexible. Dans cet article, je vais vous montrer comment j\u0026rsquo;ai créé ce blog avec Hugo.\nImage de google Installation de Hugo La première étape consiste à installer Hugo sur votre ordinateur. Vous pouvez télécharger la dernière version de Hugo sur le site officiel. Une fois que vous avez téléchargé Hugo, vous pouvez vérifier que l\u0026rsquo;installation s\u0026rsquo;est bien déroulée en exécutant la commande suivante dans votre terminal :\nhugo version Création d\u0026rsquo;un nouveau site Hugo Une fois que vous avez installé Hugo, vous pouvez créer un nouveau site Hugo en exécutant la commande suivante dans votre terminal :\nhugo new site my-blog Cette commande crée un nouveau site Hugo dans le dossier my-blog. Vous pouvez maintenant vous rendre dans le dossier my-blog et initialiser un dépôt Git :\ncd my-blog git init Ajout d\u0026rsquo;un thème Hugo Une fois que vous avez créé un nouveau site Hugo, vous pouvez ajouter un thème Hugo en exécutant la commande suivante dans votre terminal :\ngit submodule add Création d\u0026rsquo;un nouveau contenu Une fois que vous avez ajouté un thème Hugo, vous pouvez créer un nouveau contenu en exécutant la commande suivante dans votre terminal :\nhugo new posts/my-first-post.md Cette commande crée un nouveau contenu dans le dossier content/posts avec le nom my-first-post.md. Vous pouvez maintenant éditer le fichier my-first-post.md et ajouter du contenu à votre nouveau contenu.\nGénération du site Hugo Une fois que vous avez créé un nouveau contenu, vous pouvez générer votre site Hugo en exécutant la commande suivante dans votre terminal :\nhugo Cette commande génère votre site Hugo dans le dossier public. Vous pouvez maintenant vous rendre dans le dossier public et initialiser un dépôt Git :\ncd public git init Déploiement du site Hugo Une fois que vous avez généré votre site Hugo, vous pouvez le déployer en exécutant la commande suivante dans votre terminal :\ngit add . git commit -m \u0026#34;Initial commit\u0026#34; git push origin master Cette commande déploie votre site Hugo sur GitHub Pages. Vous pouvez maintenant visiter votre site Hugo à l\u0026rsquo;adresse suivante : https://your-username.github.io/my-blog/.\nConclusion Dans cet article, j\u0026rsquo;ai montré comment j\u0026rsquo;ai créé ce blog avec Hugo. J\u0026rsquo;espère que vous avez trouvé cet article utile et que vous avez appris quelque chose de nouveau. Si vous avez des questions ou des commentaires, n\u0026rsquo;hésitez pas à les laisser dans la section commentaires ci-dessous.\n","permalink":"https://adr1811.github.io/Hugo-Cours/posts/helloworld-copy/","summary":"Bienvenue sur mon blog Hugo ! Hugo est un générateur de site statique open-source écrit en Go. Il est rapide, facile à utiliser et très flexible. Dans cet article, je vais vous montrer comment j\u0026rsquo;ai créé ce blog avec Hugo.\nImage de google Installation de Hugo La première étape consiste à installer Hugo sur votre ordinateur. Vous pouvez télécharger la dernière version de Hugo sur le site officiel. Une fois que vous avez téléchargé Hugo, vous pouvez vérifier que l\u0026rsquo;installation s\u0026rsquo;est bien déroulée en exécutant la commande suivante dans votre terminal :","title":"COMMENT INSTALLER HUGO LA TROISIEME VA VOUS CHOQUER"},{"content":"Bienvenue sur mon blog Hugo ! Hugo est un générateur de site statique open-source écrit en Go. Il est rapide, facile à utiliser et très flexible. Dans cet article, je vais vous montrer comment j\u0026rsquo;ai créé ce blog avec Hugo.\nImage de google Installation de Hugo La première étape consiste à installer Hugo sur votre ordinateur. Vous pouvez télécharger la dernière version de Hugo sur le site officiel. Une fois que vous avez téléchargé Hugo, vous pouvez vérifier que l\u0026rsquo;installation s\u0026rsquo;est bien déroulée en exécutant la commande suivante dans votre terminal :\nhugo version Création d\u0026rsquo;un nouveau site Hugo Une fois que vous avez installé Hugo, vous pouvez créer un nouveau site Hugo en exécutant la commande suivante dans votre terminal :\nhugo new site my-blog Cette commande crée un nouveau site Hugo dans le dossier my-blog. Vous pouvez maintenant vous rendre dans le dossier my-blog et initialiser un dépôt Git :\ncd my-blog git init Ajout d\u0026rsquo;un thème Hugo Une fois que vous avez créé un nouveau site Hugo, vous pouvez ajouter un thème Hugo en exécutant la commande suivante dans votre terminal :\ngit submodule add Création d\u0026rsquo;un nouveau contenu Une fois que vous avez ajouté un thème Hugo, vous pouvez créer un nouveau contenu en exécutant la commande suivante dans votre terminal :\nhugo new posts/my-first-post.md Cette commande crée un nouveau contenu dans le dossier content/posts avec le nom my-first-post.md. Vous pouvez maintenant éditer le fichier my-first-post.md et ajouter du contenu à votre nouveau contenu.\nGénération du site Hugo Une fois que vous avez créé un nouveau contenu, vous pouvez générer votre site Hugo en exécutant la commande suivante dans votre terminal :\nhugo Cette commande génère votre site Hugo dans le dossier public. Vous pouvez maintenant vous rendre dans le dossier public et initialiser un dépôt Git :\ncd public git init Déploiement du site Hugo Une fois que vous avez généré votre site Hugo, vous pouvez le déployer en exécutant la commande suivante dans votre terminal :\ngit add . git commit -m \u0026#34;Initial commit\u0026#34; git push origin master Cette commande déploie votre site Hugo sur GitHub Pages. Vous pouvez maintenant visiter votre site Hugo à l\u0026rsquo;adresse suivante : https://your-username.github.io/my-blog/.\nConclusion Dans cet article, j\u0026rsquo;ai montré comment j\u0026rsquo;ai créé ce blog avec Hugo. J\u0026rsquo;espère que vous avez trouvé cet article utile et que vous avez appris quelque chose de nouveau. Si vous avez des questions ou des commentaires, n\u0026rsquo;hésitez pas à les laisser dans la section commentaires ci-dessous.\n","permalink":"https://adr1811.github.io/Hugo-Cours/posts/helloworld/","summary":"Bienvenue sur mon blog Hugo ! Hugo est un générateur de site statique open-source écrit en Go. Il est rapide, facile à utiliser et très flexible. Dans cet article, je vais vous montrer comment j\u0026rsquo;ai créé ce blog avec Hugo.\nImage de google Installation de Hugo La première étape consiste à installer Hugo sur votre ordinateur. Vous pouvez télécharger la dernière version de Hugo sur le site officiel. Une fois que vous avez téléchargé Hugo, vous pouvez vérifier que l\u0026rsquo;installation s\u0026rsquo;est bien déroulée en exécutant la commande suivante dans votre terminal :","title":"COMMENT INSTALLER HUGO LA TROISIEME VA VOUS CHOQUER"},{"content":"name: Deploy Hugo site to Pages on: push: branches: - main workflow_dispatch: permissions: contents: read pages: write id-token: write concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: false defaults: run: shell: bash jobs: build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.120.2 steps: - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026amp;\u0026amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Install Dart Sass run: sudo snap install dart-sass - name: Checkout uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 - name: Setup Pages id: pages uses: actions/configure-pages@v3 - name: Install Node.js dependencies run: \u0026#34;[[ -f package-lock.json || -f npm-shrinkwrap.json ]] \u0026amp;\u0026amp; npm ci || true\u0026#34; - name: Build with Hugo env: HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc \\ --minify \\ --baseURL \u0026#34;${{ steps.pages.outputs.base_url }}/\u0026#34; - name: Upload artifact uses: actions/upload-pages-artifact@v2 with: path: ./public deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v2 ","permalink":"https://adr1811.github.io/Hugo-Cours/workflow/","summary":"name: Deploy Hugo site to Pages on: push: branches: - main workflow_dispatch: permissions: contents: read pages: write id-token: write concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: false defaults: run: shell: bash jobs: build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.120.2 steps: - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026amp;\u0026amp; sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Install Dart Sass run: sudo snap install dart-sass - name: Checkout uses: actions/checkout@v4 with: submodules: recursive fetch-depth: 0 - name: Setup Pages id: pages uses: actions/configure-pages@v3 - name: Install Node.","title":"Sample workflow for building and deploying a Hugo site to GitHub Pages"}]